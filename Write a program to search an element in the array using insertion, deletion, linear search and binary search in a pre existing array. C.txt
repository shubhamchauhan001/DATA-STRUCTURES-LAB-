//. Write a program to search an element in the array using insertion, deletion, linear search and binary search in a pre existing array. //

#include <stdio.h>

void insertion(int arr[], int *n, int element, int pos) {
    for(int i = *n; i >= pos; i--) {
        arr[i] = arr[i - 1];
    }
    arr[pos - 1] = element;
    (*n)++;
}

void deletion(int arr[], int *n, int pos) {
    for(int i = pos - 1; i < *n - 1; i++) {
        arr[i] = arr[i + 1];
    }
    (*n)--;
}

int linear_search(int arr[], int n, int key) {
    for(int i = 0; i < n; i++) {
        if(arr[i] == key)
            return i;
    }
    return -1;
}

int binary_search(int arr[], int n, int key) {
    int low = 0, high = n - 1;
    while(low <= high) {
        int mid = (low + high) / 2;
        if(arr[mid] == key)
            return mid;
        else if(arr[mid] < key)
            low = mid + 1;
        else
            high = mid - 1;
    }
    return -1;
}

int main() {
    int arr[100] = {1, 3, 5, 7, 9, 11};
    int n = 6;
    int choice, element, pos, key;

    printf("Enter choice: 1 for Insertion, 2 for Deletion, 3 for Linear Search, 4 for Binary Search\n");
    scanf("%d", &choice);

    switch(choice) {
        case 1:
            printf("Enter element and position to insert: ");
            scanf("%d %d", &element, &pos);
            insertion(arr, &n, element, pos);
            printf("Array after insertion: ");
            for(int i = 0; i < n; i++) {
                printf("%d ", arr[i]);
            }
            break;
        case 2:
            printf("Enter position to delete: ");
            scanf("%d", &pos);
            deletion(arr, &n, pos);
            printf("Array after deletion: ");
            for(int i = 0; i < n; i++) {
                printf("%d ", arr[i]);
            }
            break;
        case 3:
            printf("Enter element to search: ");
            scanf("%d", &key);
            int index = linear_search(arr, n, key);
            if(index != -1)
                printf("Element found at position %d\n", index + 1);
            else
                printf("Element not found\n");
            break;
        case 4:
            printf("Enter element to search: ");
            scanf("%d", &key);
            int bin_index = binary_search(arr, n, key);
            if(bin_index != -1)
                printf("Element found at position %d\n", bin_index + 1);
            else
                printf("Element not found\n");
            break;
        default:
            printf("Invalid choice\n");
            break;
    }

    return 0;
}
